"""empty message

Revision ID: fca4847f9c60
Revises: 
Create Date: 2019-08-24 22:20:23.241607

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'fca4847f9c60'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('geo_codes',
    sa.Column('geo_code_id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('geo_name', sa.Text(), nullable=True),
    sa.Column('geo_abreviation', sa.Text(), nullable=True),
    sa.Column('geographic_level', sa.Enum('state', 'county', name='geo_levels'), nullable=False),
    sa.PrimaryKeyConstraint('geo_code_id')
    )
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('email', sa.Text(), nullable=False),
    sa.Column('username', sa.Text(), nullable=False),
    sa.Column('password_hash', sa.Text(), nullable=False),
    sa.Column('is_admin', sa.Boolean(), server_default=sa.text('false'), nullable=True),
    sa.Column('is_email_authenticated', sa.Boolean(), server_default=sa.text('false'), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('geographic_datasets',
    sa.Column('geographic_dataset_id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_public', sa.Boolean(), server_default=sa.text('true'), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('geographic_dataset_id')
    )
    op.create_table('geographic_attributes',
    sa.Column('geographic_attribute_id', sa.Integer(), nullable=False),
    sa.Column('geo_code_id', sa.Integer(), nullable=False),
    sa.Column('dataset_id', sa.Integer(), nullable=False),
    sa.Column('attribute_name', sa.Text(), nullable=False),
    sa.Column('attribute_value', sa.Numeric(), nullable=False),
    sa.Column('attribute_relative_weight', sa.Enum('high', 'medium', 'low', name='relative_weights'), nullable=True),
    sa.ForeignKeyConstraint(['dataset_id'], ['geographic_datasets.geographic_dataset_id'], ),
    sa.ForeignKeyConstraint(['geo_code_id'], ['geo_codes.geo_code_id'], ),
    sa.PrimaryKeyConstraint('geographic_attribute_id')
    )
    op.create_table('maps',
    sa.Column('map_id', sa.Integer(), nullable=False),
    sa.Column('dataset_1_id', sa.Integer(), nullable=False),
    sa.Column('dataset_2_id', sa.Integer(), nullable=True),
    sa.Column('hex_color_1', sa.Text(), nullable=True),
    sa.Column('hex_color_2', sa.Text(), nullable=True),
    sa.Column('title', sa.Text(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('is_public', sa.Boolean(), server_default=sa.text('true'), nullable=True),
    sa.Column('zoom_level', sa.Text(), nullable=True),
    sa.Column('center_coordinates', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['dataset_1_id'], ['geographic_datasets.geographic_dataset_id'], ),
    sa.ForeignKeyConstraint(['dataset_2_id'], ['geographic_datasets.geographic_dataset_id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('map_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('maps')
    op.drop_table('geographic_attributes')
    op.drop_table('geographic_datasets')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('geo_codes')
    # ### end Alembic commands ###
